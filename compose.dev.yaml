services:
  db:
    image: postgres:14
    env_file:
      - "./portfolio_tracker_api/.env"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network

  frontend:
    container_name: frontend
    image: node:18-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    volumes:
      - ../portfolio-frontend:/app
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    networks:
      - app-network
  backend:
    container_name: backend
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      - "./portfolio_tracker_api/.env"
    build:
      context: ./portfolio_tracker_api
      dockerfile: dockerfile.dev
    volumes:
      - ./portfolio_tracker_api:/app
      - static_volume:/app/staticfiles
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    networks:
      - app-network

  nginx:
    build:
      context: . # context is root
      dockerfile: ./nginx/dockerfile.dev
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
      - db
    networks:
      - app-network
    volumes:
      - static_volume:/app/staticfiles

volumes:
  postgres_data:
  static_volume:

networks:
  app-network:
    driver: bridge